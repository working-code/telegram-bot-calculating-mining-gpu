# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire:      true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    _instanceof:
        App\Component\TelegramDialog\DialogHandlerInterface:
            tags: [ 'app.dialog_handler' ]
        Telegram\Bot\Commands\CommandInterface:
            tags: [ 'telegram.command' ]

    App\Component\TelegramDialog\DialogManager:
        arguments:
            - !tagged_iterator app.dialog_handler

    Telegram\Bot\Api:
        lazy: true
        arguments:
            $token: '%env(TELEGRAM_BOT_API_TOKEN)%'
        calls:
            -   method: addCommands
                arguments:
                    - !tagged_iterator telegram.command

    Redis:
        class:   Redis
        factory: Symfony\Component\Cache\Adapter\RedisAdapter::createConnection
        arguments:
            - '%env(REDIS_DSN)%'

    redis_adapter:
        class: Symfony\Component\Cache\Adapter\RedisTagAwareAdapter
        arguments:
            - '@Redis'
            - 'tg_bot_calculating_mining'

    GuzzleHttp\Client:

    App\Parser\HashRateParser:
        arguments:
            $hashRateUrl: '%env(HASHRATE_URL)%'

    App\Parser\CurrencyParser:
        arguments:
            $currencyUrl: '%env(CURRENCY_URL)%'
